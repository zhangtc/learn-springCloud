/*plugins {id 'java'}group 'com.pd'version '1.0-SNAPSHOT'sourceCompatibility = 1.8repositories {mavenCentral()}dependencies {testCompile group: 'junit', name: 'junit', version: '4.12'}*/
//group = 'org.springcloud'
//version = '1.0-SNAPSHOT'
//apply plugin: 'java'
//sourceCompatibility = 1.8

apply from: file('config.gradle')

buildscript {
    ext {
        springBootVersion = '3.1.0'
    }
    repositories {
        mavenLocal()
        maven { url 'file://C:/Users/lisha/.m2/repository'}
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }

}


subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.springcloud'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        mavenLocal()
        maven { url 'file://C:/Users/lisha/.m2/repository'}
        mavenCentral()
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }
//    dependencies {
//        ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
//        ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
//        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')
//        compile jarTree
//    }
//
//    task listJars(description: 'Display all compile jars.') << {
//        configurations.compile.each { File file -> println file.name }
//    }

}

//构建Gradle脚本自身需要的资源，可以声明的资源包括依赖项、第三方插件、maven仓库地址等。
//buildscript {
//    ext {
//        springBootVersion = '2.0.2.RELEASE'
//        springCloudVersion = 'Finchley.M8'
//    }
////设置仓库
//    repositories {
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://repo.spring.io/milestone' }
//    }
////用来打包
//    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
//}
////配置全局, 包括root项目和子项目
//allprojects {
//// 设置仓库
//    repositories {
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'https://repo.spring.io/milestone' }
//    }
//    //配置编码格式
//    tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
//}

