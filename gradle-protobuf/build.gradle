plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.3'
}

def deps = rootProject.ext.depsLibs

dependencies {

    implementation deps.protobuf_java
    implementation deps.grpc_protobuf
    implementation deps.grpc_stub


    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation deps.annotation_api
    }
}

protobuf {
    setGeneratedFilesBaseDirProperty("$projectDir/src")
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = deps.protoc
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = deps.protoc_gen_grpc_java
        }
    }
    generateProtoTasks {
        ofSourceSet('main').configureEach {
            plugins {
                // Apply the "grpc" plugin whose spec is defined above, without
                // options.  Note the braces cannot be omitted, otherwise the
                // plugin will not be added. This is because of the implicit way
                // NamedDomainObjectContainer binds the methods.
                grpc {
                    outputSubDir='java'
                }
            }

        }
    }

}
